#!/bin/bash
set -e
. appmanconfig
. appmancore


function main() {
    checkAdbServer
    updateConnectedDevicesList

    IFS=$'\n'
    for deviceId in `getConnectedDevices`
    do
        processDevice ${deviceId}
    done
}

function processDevice() {
    deviceId=$1
    deviceFile=```getDeviceFile ${deviceId}```
    echo Processing device ${deviceId}

    if [[ -e "${deviceFile}" ]]; then
        processExistentDevice ${deviceId}
    else
        processNewDevice ${deviceId}
    fi
}

function processExistentDevice() {
    deviceId=$1
    echo Not yet implemented
}

function processNewDevice() {
    deviceId=$1
    printf "\n\n"

    confirmCall "configureNewDevice $deviceId" \
        "New device ${deviceId} is connected. Would you like to configure it?"
}


function startDeviceNode() {
    deviceId=$1

    killDeviceProcessIfExisted $deviceId
}

function configureNewDevice() {
    deviceId=$1

    _jsonAppiumPort=`findFreePort`
    echo "Found open port: ${_jsonAppiumPort}"

    readVar "browserName"  _jsonBrowserName "${__appmanDefault_browserName}"
    readVar "Android version" _jsonVersion "${__appmanDefault_version}"
    readVar "Appium server host" _jsonAppiumHost "${__appmanDefault_apppiumHost}"
    readVar "Hub host" _jsonHubHost "${__appmanDefault_hubHost}"
    readVar "Hub port" _jsonHubPort "${__appmanDefault_hubPort}"

    cat nodeconfig-template | sed \
        -e "s/\${browserName}/${_jsonBrowserName}/g" \
        -e "s/\${version}/${_jsonVersion}/g" \
        -e "s/\${appiumHost}/${_jsonAppiumHost}/g" \
        -e "s/\${appiumPort}/${_jsonAppiumPort}/g" \
        -e "s/\${hubHost}/${_jsonHubHost}/g" \
        -e "s/\${hubPort}/${_jsonHubPort}/g" \
    > device-${deviceId}-nodeconfig.json

    echo "Device ${deviceId} is configured"

    confirmCall "startDeviceNode $deviceId" \
        "Would you like to start the newly configured device?"
    
}


main
