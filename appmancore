#!/bin/bash
. appmanconfig

function die() {
    >&2 echo ERROR: $*
    exit 1
}


function checkAdbServer() {
    proc=`ps -ef | grep adb | grep -v grep`
    if [[ -z "$proc" ]]; then
        die "Android debug bridge server is not running. Use command: adb start-server"
    fi
}

function confirmCall() {
    call=$1
    question=$2

    read -r -p "$question [y/N] " response
    case $response in 
        [yY][eE][sS]|[yY]) 
            eval ${call}
            ;;
    esac
}


function getConnectedDevices() {
    cat ${__appmanConnectedDevicesFile}
}

function getDeviceFile() {
    echo "device-$1.device"
}


function updateConnectedDevicesList() {
    adb devices | tail -n +2 | awk '{print $1}' | sed '/^$/d' > ${__appmanConnectedDevicesFile}
}


function readVar() {
    printf "$1"
    if [[ -n $3 ]]; then
        printf " [$3]: "
    else
        printf ": "
    fi
    read input

    if [[ -n $3 && -z $input ]]; then
        input=$3
    fi

    eval "$2=\$input"
}

function findFreePort() {
    portEnd=$((__appmanPortLookupStart+__appmanPortLookupLimit))
    foundOpenPort=0

    for port in $(seq ${__appmanPortLookupStart} ${portEnd})
    do
        # checking if there are any processes listening on the port
        processUsingPort=`lsof -i:$port`
        if [[ -z ${processUsingPort} ]]; then
            foundOpenPort=${port}
            break
        fi
    done

    if [[ ${foundOpenPort} -gt 0 ]]; then
        echo ${foundOpenPort}
    else 
        die "Failed find open port in range ${__appmanPortLookupStart}..${portEnd}"
    fi
}




